---
# Docker: docker compose -f crdb.yml up --scale crdb=3
# Zed:    zed context set example-crdb localhost:50051 foobar --insecure
#
# This runs SpiceDB, using CockroachDB as the storage engine. SpiceDB will not
# have any schema written to it.
#
# This compose example is designed to support CRDB clusters. In order
# to properly form a CRDB cluster, the CLI must be invoked with: --scale=3
# You can set scale to any number of nodes, or skip to spin up one single node.
#
# - init_cluster runs tells CRDB to form the cluster
# - init_database creates the logical database used by spicedb
# - migrate runs "spicedb migrate head", which initializes the SpiceDB schema definition
#
# Note: if you specify a project name with the -p flag, the DNS of the CRDB hosts will change
#       and the cluster won't form
#
# SpiceDB settings:
#   pre-shared key: foobar
#   dashboard address: http://localhost:8080
#   metrics address: http://localhost:9090
#   grpc address: http://localhost:50051
#
# CockroachDB settings:
#   user: root
#   password: secret
#   port: 26257
#   dashboard address: http://localhost:8081
#   sql DSN: postgresql://root:secret@crdb:26257/spicedb?sslmode=disable

version: "3"

services:
  spicedb:
    image: "authzed/spicedb"
    command: "serve"
    restart: "always"
    ports:
      - "8080:8080"
      - "9090:9090"
      - "50051:50051"
    environment:
      - "SPICEDB_GRPC_PRESHARED_KEY=foobar"
      - "SPICEDB_DATASTORE_ENGINE=cockroachdb"
      - "SPICEDB_DATASTORE_CONN_URI=postgresql://root:secret@crdb:26257/spicedb?sslmode=disable"
      - "SPICEDB_LOG_LEVEL=info"
      - "SPICEDB_LOG_FORMAT=console"
    depends_on:
      - "migrate"

  migrate:
    image: "authzed/spicedb"
    command: "migrate head"
    restart: "on-failure:3"
    environment:
      - "SPICEDB_DATASTORE_ENGINE=cockroachdb"
      - "SPICEDB_DATASTORE_CONN_URI=postgresql://root:secret@crdb:26257/spicedb?sslmode=disable"
      - "SPICEDB_LOG_LEVEL=info"
      - "SPICEDB_LOG_FORMAT=console"
    depends_on:
      - "init_database"

  init_database:
    image: "cockroachdb/cockroach"
    restart: "on-failure:3"
    command: "sql --insecure -e 'CREATE DATABASE IF NOT EXISTS spicedb;'"
    environment:
      - "COCKROACH_HOST=crdb:26257"
    depends_on:
      - "init_cluster"

  enable_changefeeds:
    image: "cockroachdb/cockroach"
    restart: "on-failure:3"
    command: "sql --insecure -e 'SET CLUSTER SETTING kv.rangefeed.enabled = true;'"
    environment:
      - "COCKROACH_HOST=crdb:26257"
    depends_on:
      - "init_database"

  init_cluster:
    image: "cockroachdb/cockroach"
    restart: "on-failure:3"
    command: "init --insecure"
    environment:
      # initialize cluster through node 1
      - "COCKROACH_HOST=datastores-crdb-1:26257"
    depends_on:
      - "crdb"

  crdb:
    image: "cockroachdb/cockroach"
    # in order to make the cluster form, the host name is <project>-<service>-<number>
    # The setup will support --scale arg with any value
    command: "start --join=datastores-crdb-1,datastores-crdb-2,datastores-crdb-3 --insecure"
    ports:
      - "8080"
      - "26257"
    environment:
      - "POSTGRES_PASSWORD=secret"
    healthcheck:
      test: "curl --fail http://localhost:8080/health?ready=1 || exit 1"
      interval: "2s"
      retries: 3
      start_period: "15s"
      timeout: "5s"
